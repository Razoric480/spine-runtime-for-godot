name: ðŸšª Windows Builds
on:
  push:
    branches: [ spine4.0 ]
  # pull_request:
  #   branches: [ spine4.0 ]

# Global Settings
# SCONS_CACHE for windows must be set in the build environment
env:
  GODOT_BASE_BRANCH: 3.4-stable
  SCONS_CACHE_MSVC_CONFIG: true
  SCONS_CACHE_LIMIT: 4096
  GODOT_TARGET_PLATFORM: windows
  SPINE_SUFFIX: 4_0

jobs:
  windows-editor:
    # Windows 10 with latest image
    runs-on: "windows-latest"
    name: Editor

    steps:
      # Clone Godot
      - uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: ${{env.GODOT_BASE_BRANCH}}
      
      # Clone our module under the correct directory
      - uses: actions/checkout@v2
        with:
          path: modules/spine_runtime
      
      # Upload cache on completion and check it out now
      # Editing this is pretty dangerous for Windows since it can break and needs to be properly tested with a fresh cache.
      - name: Load .scons_cache directory
        id: windows-editor-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons pywin32
          python --version
          scons --version

      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons -j2 verbose=yes warnings=all werror=yes platform=${{env.GODOT_TARGET_PLATFORM}} tools=yes tests=no target=release_debug bits=64

      # Make build available
      - uses: actions/upload-artifact@v2
        with:
          name: godot_editor_with_spine_${{env.SPINE_SUFFIX}}.64.exe
          path: bin/godot.${{env.GODOT_TARGET_PLATFORM}}.opt.tools.64.exe

  windows-template-debug:
    # Windows 10 with latest image
    runs-on: "windows-latest"
    name: Debug

    steps:
      # Clone Godot
      - uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: ${{env.GODOT_BASE_BRANCH}}
      
      # Clone our module under the correct directory
      - uses: actions/checkout@v2
        with:
          path: modules/spine_runtime

      # Upload cache on completion and check it out now
      # Editing this is pretty dangerous for Windows since it can break and needs to be properly tested with a fresh cache.
      - name: Load .scons_cache directory
        id: windows-template-debug-cache
        uses: RevoluPowered/cache@v2.1
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons pywin32
          python --version
          scons --version

      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons -j2 verbose=yes warnings=all werror=yes platform=${{env.GODOT_TARGET_PLATFORM}} tools=no tests=no target=debug bits=64

      # Make build available
      - uses: actions/upload-artifact@v2
        with:
          name: godot.${{env.GODOT_TARGET_PLATFORM}}.debug.64.exe
          path: bin/godot.${{env.GODOT_TARGET_PLATFORM}}.debug.64.exe

  windows-template-release:
    # Windows 10 with latest image
    runs-on: "windows-latest"
    name: Release

    steps:
      # Clone Godot
      - uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: ${{env.GODOT_BASE_BRANCH}}
      
      # Clone our module under the correct directory
      - uses: actions/checkout@v2
        with:
          path: modules/spine_runtime

      # Upload cache on completion and check it out now
      # Editing this is pretty dangerous for Windows since it can break and needs to be properly tested with a fresh cache.
      - name: Load .scons_cache directory
        id: windows-template-release-cache
        uses: RevoluPowered/cache@v2.1
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons pywin32
          python --version
          scons --version

      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons -j2 verbose=yes warnings=all werror=yes platform=${{env.GODOT_TARGET_PLATFORM}} tools=no tests=no target=release bits=64

      # Make build available
      - uses: actions/upload-artifact@v2
        with:
          name: godot.${{env.GODOT_TARGET_PLATFORM}}.opt.64.exe
          path: bin/godot.${{env.GODOT_TARGET_PLATFORM}}.opt.64.exe
  
  # Compile 32 bits
  windows-editor-32:
    # Windows 10 with latest image
    runs-on: "windows-latest"
    name: Editor-32

    steps:
      # Clone Godot
      - uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: ${{env.GODOT_BASE_BRANCH}}
      
      # Clone our module under the correct directory
      - uses: actions/checkout@v2
        with:
          path: modules/spine_runtime
      
      # Upload cache on completion and check it out now
      # Editing this is pretty dangerous for Windows since it can break and needs to be properly tested with a fresh cache.
      - name: Load .scons_cache directory
        id: windows-editor-32-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons pywin32
          python --version
          scons --version

      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons -j2 verbose=yes warnings=all werror=no platform=${{env.GODOT_TARGET_PLATFORM}} tools=yes tests=no target=release_debug bits=32

      # Make build available
      - uses: actions/upload-artifact@v2
        with:
          name: godot_editor_with_spine_${{env.SPINE_SUFFIX}}.32.exe
          path: bin/godot.${{env.GODOT_TARGET_PLATFORM}}.opt.tools.32.exe

  windows-template-debug-32:
    # Windows 10 with latest image
    runs-on: "windows-latest"
    name: Debug-32

    steps:
      # Clone Godot
      - uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: ${{env.GODOT_BASE_BRANCH}}
      
      # Clone our module under the correct directory
      - uses: actions/checkout@v2
        with:
          path: modules/spine_runtime

      # Upload cache on completion and check it out now
      # Editing this is pretty dangerous for Windows since it can break and needs to be properly tested with a fresh cache.
      - name: Load .scons_cache directory
        id: windows-template-debug-32-cache
        uses: RevoluPowered/cache@v2.1
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons pywin32
          python --version
          scons --version

      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons -j2 verbose=yes warnings=all werror=no platform=${{env.GODOT_TARGET_PLATFORM}} tools=no tests=no target=debug bits=32

      # Make build available
      - uses: actions/upload-artifact@v2
        with:
          name: godot.${{env.GODOT_TARGET_PLATFORM}}.debug.32.exe
          path: bin/godot.${{env.GODOT_TARGET_PLATFORM}}.debug.32.exe

  windows-template-release-32:
    # Windows 10 with latest image
    runs-on: "windows-latest"
    name: Release-32

    steps:
      # Clone Godot
      - uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: ${{env.GODOT_BASE_BRANCH}}
      
      # Clone our module under the correct directory
      - uses: actions/checkout@v2
        with:
          path: modules/spine_runtime

      # Upload cache on completion and check it out now
      # Editing this is pretty dangerous for Windows since it can break and needs to be properly tested with a fresh cache.
      - name: Load .scons_cache directory
        id: windows-template-release-32-cache
        uses: RevoluPowered/cache@v2.1
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons pywin32
          python --version
          scons --version

      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons -j2 verbose=yes warnings=all werror=no platform=${{env.GODOT_TARGET_PLATFORM}} tools=no tests=no target=release bits=32

      # Make build available
      - uses: actions/upload-artifact@v2
        with:
          name: godot.${{env.GODOT_TARGET_PLATFORM}}.opt.32.exe
          path: bin/godot.${{env.GODOT_TARGET_PLATFORM}}.opt.32.exe